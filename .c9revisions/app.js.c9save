{"ts":1363267411271,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1363267413707,"patch":[[{"diffs":[[1,"function ManagerCtrl($scope) {\n}"]],"start1":0,"start2":0,"length1":0,"length2":32}]],"length":32,"saved":false}
{"ts":1363275010747,"patch":[[{"diffs":[[0,") {\n"],[-1,"}"],[1,"    $scope.categories = [];\n    \n    $scope.$on('$viewContentLoaded', function(){\n        alert(\"loaded\");\n    });\n\n}\n"]],"start1":27,"start2":27,"length1":5,"length2":122}]],"length":149,"saved":false}
{"ts":1363275456971,"patch":[[{"diffs":[[-1,"function ManagerCtrl($scope"],[1,"angular.module('STManager', []).config(function($httpProvider"],[0,") {"],[1,"\r"],[0,"\n    $"],[-1,"scope.categories = [];\n    \n    $scope.$on('$viewContentLoaded', function(){\n        alert(\"loaded\");\n    });\n\n}\n"],[1,"httpProvider.responseInterceptors.push('myHttpInterceptor');\r\n\tvar spinnerFunction = function(data, headersGetter) {\r\n\t\t// todo start the spinner here\r\n\t\t$(\"body\").spin({\r\n\t\t\tlines : 8,\r\n\t\t\tlength : 4,\r\n\t\t\twidth : 3,\r\n\t\t\tradius : 5,\r\n\t\t\ttop : 0,\r\n\t\t\tleft : 0\r\n\t\t});\r\n\t\treturn data;\r\n\t};\r\n\t$httpProvider.defaults.transformRequest.push(spinnerFunction);\r\n})\r\n// register the interceptor as a service, intercepts ALL angular ajax http calls\r\n.factory('myHttpInterceptor', function($q, $window) {\r\n\treturn function(promise) {\r\n\t\treturn promise.then(function(response) {\r\n\t\t\t// do something on success\r\n\t\t\t// todo hide the spinner\r\n\t\t\t$(\"body\").spin(false);\r\n\t\t\treturn response;\r\n\r\n\t\t}, function(response) {\r\n\t\t\t// do something on error\r\n\t\t\t// todo hide the spinner\r\n\t\t\t$(\"body\").spin(false);\r\n\t\t\treturn $q.reject(response);\r\n\t\t});\r\n\t};\r\n});"]],"start1":0,"start2":0,"length1":149,"length2":907}]],"length":907,"saved":false}
{"contributors":[],"silentsave":false,"ts":1363604322625,"patch":[[{"diffs":[[0,"er', [])"],[1,"\r\n"],[0,".config("]],"start1":23,"start2":23,"length1":16,"length2":18},{"diffs":[[0,");\r\n})\r\n"],[1,". directive('tabs', function() {\r\n    return {\r\n      restrict: 'E',\r\n      transclude: true,\r\n      scope: {},\r\n      controller: function($scope, $element) {\r\n        var panes = $scope.panes = [];\r\n \r\n        $scope.select = function(pane) {\r\n          angular.forEach(panes, function(pane) {\r\n            pane.selected = false;\r\n          });\r\n          pane.selected = true;\r\n        }\r\n \r\n        this.addPane = function(pane) {\r\n          if (panes.length == 0) $scope.select(pane);\r\n          panes.push(pane);\r\n        }\r\n      },\r\n      template:\r\n        '<div class=\"tabbable\">' +\r\n          '<ul class=\"nav nav-tabs\">' +\r\n            '<li ng-repeat=\"pane in panes\" ng-class=\"{active:pane.selected}\">'+\r\n              '<a href=\"\" ng-click=\"select(pane)\">{{pane.title}}</a>' +\r\n            '</li>' +\r\n          '</ul>' +\r\n          '<div class=\"tab-content\" ng-transclude></div>' +\r\n        '</div>',\r\n      replace: true\r\n    };\r\n  }).\r\n  directive('pane', function() {\r\n    return {\r\n      require: '^tabs',\r\n      restrict: 'E',\r\n      transclude: true,\r\n      scope: { title: '@' },\r\n      link: function(scope, element, attrs, tabsCtrl) {\r\n        tabsCtrl.addPane(scope);\r\n      },\r\n      template:\r\n        '<div class=\"tab-pane\" ng-class=\"{active: selected}\" ng-transclude>' +\r\n        '</div>',\r\n      replace: true\r\n    };\r\n })\r\n"],[0,"// regis"]],"start1":422,"start2":422,"length1":16,"length2":1366}]],"length":2259,"saved":false}
{"ts":1363604892358,"patch":[[{"diffs":[[0,"', [])\r\n"],[1,"\r\n"],[0,".config("]],"start1":25,"start2":25,"length1":16,"length2":18},{"diffs":[[0,");\r\n})\r\n"],[1,"\r\n"],[0,". direct"]],"start1":424,"start2":424,"length1":16,"length2":18},{"diffs":[[0,"  })"],[-1,"."],[0,"\r\n  "],[1,"\r\n  ."],[0,"dire"]],"start1":1376,"start2":1376,"length1":13,"length2":17},{"diffs":[[0,";\r\n })\r\n"],[1," \r\n"],[0,"// regis"]],"start1":1780,"start2":1780,"length1":16,"length2":19}]],"length":2270,"saved":false}
{"ts":1363613039953,"patch":[[{"diffs":[[0,"unction("],[1,"$"],[0,"scope, e"]],"start1":1550,"start2":1550,"length1":16,"length2":17},{"diffs":[[0,"addPane("],[1,"$"],[0,"scope);\r"]],"start1":1612,"start2":1612,"length1":16,"length2":17},{"diffs":[[0,"e($scope);\r\n"],[1,"        tabsCtrl.changeCategory()\r\n"],[0,"      },\r\n  "]],"start1":1618,"start2":1618,"length1":24,"length2":59}]],"length":2307,"saved":false}
{"ts":1363613088766,"patch":[[{"diffs":[[0,"     }\r\n"],[1,"        \r\n        this.changeCategory = changeCategory;\r\n"],[0,"      },"]],"start1":957,"start2":957,"length1":16,"length2":73}]],"length":2364,"saved":false}
{"ts":1363613234666,"patch":[[{"diffs":[[0,"       }"],[-1,"\r\n"],[0,"        "]],"start1":955,"start2":955,"length1":18,"length2":16},{"diffs":[[0,"  \r\n"],[-1,"        this.changeCategory = changeCategory;\r\n"],[0,"    "]],"start1":969,"start2":969,"length1":55,"length2":8},{"diffs":[[0,"        "],[-1,"tabsCtrl."],[1,"$scope.changeCategory = "],[0,"changeCa"]],"start1":1638,"start2":1638,"length1":25,"length2":40},{"diffs":[[0,"gory"],[-1,"()\r\n  "],[1,";\r\n"],[0,"    "]],"start1":1680,"start2":1680,"length1":14,"length2":11}]],"length":2327,"saved":false}
{"ts":1363613403679,"patch":[[{"diffs":[[0," };\r\n })"],[1,";"],[0,"\r\n "],[1,"/*"],[0,"\r\n// reg"]],"start1":1835,"start2":1835,"length1":19,"length2":22},{"diffs":[[0,"\t};\r\n});"],[1,"*/"]],"start1":2322,"start2":2322,"length1":8,"length2":10}]],"length":2332,"saved":false}
{"ts":1363613479845,"patch":[[{"diffs":[[0,"\r\n\r\n"],[-1,".config(function($httpProvider) {\r\n    $httpProvider.responseInterceptors.push('myHttpInterceptor');\r\n\tvar spinnerFunction = function(data, headersGetter) {\r\n\t\t// todo start the spinner here\r\n\t\t$(\"body\").spin({\r\n\t\t\tlines : 8,\r\n\t\t\tlength : 4,\r\n\t\t\twidth : 3,\r\n\t\t\tradius : 5,\r\n\t\t\ttop : 0,\r\n\t\t\tleft : 0\r\n\t\t});\r\n\t\treturn data;\r\n\t};\r\n\t$httpProvider.defaults.transformRequest.push(spinnerFunction);\r\n})\r\n"],[0,"\r\n. "]],"start1":31,"start2":31,"length1":405,"length2":8},{"diffs":[[0,"\r\n });\r\n"],[1," \r\n /*\r\n .config(function($httpProvider) {\r\n    $httpProvider.responseInterceptors.push('myHttpInterceptor');\r\n    var spinnerFunction = function(data, headersGetter) {\r\n\t\t// todo start the spinner here\r\n\t\t$(\"body\").spin({\r\n\t\t\tlines : 8,\r\n\t\t\tlength : 4,\r\n\t\t\twidth : 3,\r\n\t\t\tradius : 5,\r\n\t\t\ttop : 0,\r\n\t\t\tleft : 0\r\n\t\t});\r\n\t\treturn data;\r\n\t};\r\n\t$httpProvider.defaults.transformRequest.push(spinnerFunction);\r\n})\r\n*/\r\n"],[0," /*\r\n// "]],"start1":1441,"start2":1441,"length1":16,"length2":429}]],"length":2348,"saved":false}
{"ts":1363613756769,"patch":[[{"diffs":[[0,"y = "],[-1,"changeCategory;"],[1,"function(item) {\r\n            alert(\"1\");\r\n            alert(item);\r\n        }"],[0,"\r\n  "]],"start1":1269,"start2":1269,"length1":23,"length2":86}]],"length":2411,"saved":false}
